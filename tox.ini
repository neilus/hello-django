[tox]
basepython = python3.7
envlist =
  checkstyle,
  vagrant,
  py{3}-django{3},
  blackbox
skipsdist = true
recreate = false

[tox:jenkins]
basepython = python3.7
envlist =
  checkstyle,
  py{27,3}-django{18},
  blackbox
skipsdist = true


[django]
deps =
  ; !django: django~=3.0.0 # Default version
  django3: django~=3.0.0

[restframework]
deps =
  ; !rest:  djangorestframework==3.6.4 # Default version
  ; rest36: djangorestframework==3.6.4
[blackbox]
deps =
  robotframework
  robotframework-seleniumlibrary
[testenv]
passenv = *
setenv =
  PATH =  {env:PATH}{:}{toxinidir}/hello
deps =
  {[django]deps}
  {[restframework]deps}
  markdown
  pycodestyle
  autopep8
  pytest
  pytest-django
  ; -r {toxinidir}/requirements.txt
commands = pytest --junitxml={envdir}/reports.xml

[testenv:checkstyle]
deps =
  pycodestyle
  autopep8
commands = pycodestyle --show-source --show-pep8 --exclude=.svn,CVS,.bzr,.hg,.git,__pycache__,.tox,virtualenv,.venv,settings.py --statistics --count {toxinidir}

[testenv:format]
deps =
  pycodestyle
  autopep8
commands = autopep8 --in-place --aggressive --exclude .tox --exclude virtualenv --exclude .venv --recursive {toxinidir}

[testenv:blackbox]
deps =
  {[testenv]deps}
  {[blackbox]deps}
commands_pre =
  python --version
  ./manage.py runserver
commands = robot --variable {toxinidir} --outputdir {envdir} --xunit blackbox.xml --include Headless --exclude Skip BlackBox.robot

[testenv:blackbox-windows]
deps =
  {[testenv]deps}
  {[blackbox]deps}
commands = robot --include Windows --exclude Skip BlackBox.robot

[testenv:blackbox-mac]
deps =
  {[testenv]deps}
  {[blackbox]deps}
commands = robot --include MacOS --exclude Skip BlackBox.robot

[testenv:vagrant]
deps =
whitelist_externals = vagrant
commands = vagrant validate
